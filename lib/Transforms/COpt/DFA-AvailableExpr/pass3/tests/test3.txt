 														 { } :: BB Entry
                                                              %1 = alloca i32, align 4
                                                         { }
                                                              %2 = alloca i32, align 4
                                                         { }
                                                              %3 = alloca i32, align 4
                                                         { }
                                                              %d = alloca i32, align 4
                                                         { }
                                                              %e = alloca i32, align 4
                                                         { }
                                                              %f = alloca i32, align 4
                                                         { }
                                                              store i32 %x, i32* %1, align 4
                                                         { }
                                                              store i32 %y, i32* %2, align 4
                                                         { }
                                                              store i32 %z, i32* %3, align 4
                                                         { }
                                                              %4 = load i32, i32* %1, align 4
                                                         { }
                                                              %5 = load i32, i32* %2, align 4
                                                         { }
                                                              %6 = mul nsw i32 %4, %5
                                                 { %4 * %5 }
                                                              store i32 %6, i32* %d, align 4
                                                 { %4 * %5 }
                                                              %7 = load i32, i32* %1, align 4
                                                 { %4 * %5 }
                                                              %8 = load i32, i32* %2, align 4
                                                 { %4 * %5 }
                                                              %9 = mul nsw i32 %7, %8
                                        { %4 * %5, %7 * %8 }
                                                              %10 = load i32, i32* %3, align 4
                                        { %4 * %5, %7 * %8 }
                                                              %11 = mul nsw i32 %9, %10
                              { %4 * %5, %7 * %8, %9 * %10 }
                                                              store i32 %11, i32* %e, align 4
                              { %4 * %5, %7 * %8, %9 * %10 }
                                                              %12 = load i32, i32* %1, align 4
                              { %4 * %5, %7 * %8, %9 * %10 }
                                                              %13 = add nsw i32 %12, 1
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              store i32 %13, i32* %f, align 4
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              %14 = load i32, i32* %f, align 4
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              %15 = load i32, i32* %e, align 4
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              %16 = icmp sgt i32 %14, %15
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              br i1 %16, label %17, label %20
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 } :: BB Entry
                                                              %18 = load i32, i32* %1, align 4
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              %19 = add nsw i32 %18, 1
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %18 + 1 }
                                                              store i32 %19, i32* %f, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %18 + 1 }
                                                              br label %20
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %18 + 1 }
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 } :: BB Entry
                                                              %21 = load i32, i32* %1, align 4
                     { %4 * %5, %7 * %8, %9 * %10, %12 + 1 }
                                                              %22 = add nsw i32 %21, 1
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              store i32 %22, i32* %d, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              %23 = load i32, i32* %d, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              %24 = load i32, i32* %e, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              %25 = icmp sgt i32 %23, %24
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              br i1 %25, label %26, label %29
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 } :: BB Entry
                                                              %27 = load i32, i32* %2, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              %28 = add nsw i32 1, %27
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %27 }
                                                              store i32 %28, i32* %e, align 4
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %27 }
                                                              br label %29
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %27 }
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 } :: BB Entry
                                                              %30 = load i32, i32* %2, align 4
            { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1 }
                                                              %31 = add nsw i32 1, %30
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %30 }
                                                              store i32 %31, i32* %e, align 4
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %30 }
                                                              ret void
   { %4 * %5, %7 * %8, %9 * %10, %12 + 1, %21 + 1, 1 + %30 }

